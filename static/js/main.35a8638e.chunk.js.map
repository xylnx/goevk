{"version":3,"sources":["context/ThemeContext.js","hooks/useTheme.js","assets/icon-mode.js","components/ModeSelector.js","assets/icon-bolt.js","components/Header.js","components/Nav.js","components/FilterControls.js","helpers/convertDates.js","hooks/useFetch.js","assets/icon-arrow.js","components/Event.js","components/EventsNone.js","components/EventList.js","filters/filterTypes.js","styles/GlobalStyles.js","filters/FilterDates.js","App.js","index.js"],"names":["ThemeContext","createContext","themeRedudcer","state","action","type","color","payload","mode","ThemeProvider","children","useReducer","dispatch","Provider","value","changeColor","changeMode","useTheme","context","useContext","undefined","Error","IconModeLight","xmlns","width","height","fill","className","viewBox","d","IconModeDark","ModeSelector","cssClass","onClick","IconBolt","Header","to","Nav","exact","FilterControls","useLocation","search","pathname","useState","typeQueries","setTypeQueries","history","useHistory","removeFilter","e","clickedEventType","target","dataset","eventType","length","pos","indexOf","newTypes","splice","query","params","reduce","acc","cur","push","queries","URLSearchParams","getAll","useEffect","map","convertDates","eventObjects","forEach","eventObj","dateDetails","dateStr","eventName","date","Date","options","weekday","year","month","hour","minute","day","timeZone","dateArr","Intl","DateTimeFormat","format","split","time","trim","getMonth","getDate","getDateDetails","name","useFetch","url","data","setData","pending","setPending","a","fetch","res","json","fetchData","IconArrow","typeLink","Event","event","slug","place","href","link","rel","EventsNone","today","setToday","viewTransition","document","querySelector","classList","add","setTimeout","removeTrans","remove","EventList","filter","routeProps","events","setEvents","fe","setFe","re","RegExp","join","test","error","console","filterTypes","index","location","GlobalStyles","createGlobalStyle","GlobalStylesLight","getCurrentDateInfo","hours","getHours","FilterToday","todaysEvents","eventDate","FilterTomorrow","FilterAll","allEvents","App","path","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35a8638e.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const ThemeContext = createContext();\n\n// use to update context values\n// reducer allows form more complex state manipulations\n// than useState\nconst themeRedudcer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_COLOR\":\n      return { ...state, color: action.payload };\n    case \"CHANGE_MODE\":\n      return { ...state, mode: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport function ThemeProvider({ children }) {\n  const [state, dispatch] = useReducer(themeRedudcer, {\n    mode: \"dark\",\n  });\n\n  const changeColor = (color) => {\n    dispatch({ type: \"CHANGE_COLOR\", payload: color });\n  };\n\n  const changeMode = (mode) => {\n    dispatch({ type: \"CHANGE_MODE\", payload: mode });\n  };\n\n  return (\n    <ThemeContext.Provider value={{ ...state, changeColor, changeMode }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n","import { useContext } from \"react\";\nimport { ThemeContext } from \"../context/ThemeContext\";\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme() must be used inside a ThemeProvider\");\n  }\n\n  return context;\n};\n","export const IconModeLight = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      className=\"bi bi-brightness-high\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path d=\"M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z\" />\n    </svg>\n  );\n};\n\nexport const IconModeDark = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      className=\"bi bi-moon-stars\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path d=\"M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z\" />\n      <path d=\"M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z\" />\n    </svg>\n  );\n};\n","// Custom hooks\nimport { useTheme } from '../hooks/useTheme';\n\n// Components\nimport { IconModeLight, IconModeDark } from '../assets/icon-mode';\n\nexport const ModeSelector = ({ cssClass }) => {\n  const { mode, changeMode } = useTheme();\n  return (\n    <div className={cssClass}>\n      <button\n        className={`${cssClass}__button`}\n        onClick={() =>\n          mode === 'dark' ? changeMode('light') : changeMode('dark')\n        }\n      >\n        {mode === 'light' && <IconModeLight />}\n        {mode === 'dark' && <IconModeDark />}\n      </button>\n    </div>\n  );\n};\n","export const IconBolt = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"36\"\n      height=\"36\"\n      className=\"bi bi-lightning-charge\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path d=\"M11.251.068a.5.5 0 0 1 .227.58L9.677 6.5H13a.5.5 0 0 1 .364.843l-8 8.5a.5.5 0 0 1-.842-.49L6.323 9.5H3a.5.5 0 0 1-.364-.843l8-8.5a.5.5 0 0 1 .615-.09zM4.157 8.5H7a.5.5 0 0 1 .478.647L6.11 13.59l5.732-6.09H9a.5.5 0 0 1-.478-.647L9.89 2.41 4.157 8.5z\" />\n    </svg>\n  );\n};\n","import { Link } from 'react-router-dom';\n\n// Components\nimport { ModeSelector } from './ModeSelector';\n\n// Assets\nimport { IconBolt } from './../assets/icon-bolt';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\">\n        <h1>\n          <IconBolt />\n          goeVK\n        </h1>\n      </Link>\n      <ModeSelector cssClass=\"header__mode-selector\" />\n      <div className=\"header__claim\">\n        Dein Veranstaltungskalender für Göttingen\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { NavLink } from 'react-router-dom';\n\nexport const Nav = () => {\n  return (\n    <nav className=\"nav\">\n      <NavLink exact to=\"/\" className=\"btn nav__item today\">\n        Heute\n      </NavLink>\n      <NavLink exact to=\"/tomorrow\" className=\"btn nav__item tomorrow\">\n        Morgen\n      </NavLink>\n      <NavLink to=\"/all\" className=\"btn nav__item all\">\n        Alle Veranstaltungen\n      </NavLink>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router';\n\nexport const FilterControls = () => {\n  const { search, pathname } = useLocation();\n  const [typeQueries, setTypeQueries] = useState([]);\n  const history = useHistory();\n\n  const removeFilter = (e) => {\n    // Get event type from clicked button\n    const clickedEventType = e.target.dataset.eventType;\n\n    if (typeQueries.length > 0) {\n      // Find position of event type in typeQueries array\n      const pos = typeQueries.indexOf(clickedEventType);\n      const newTypes = typeQueries;\n\n      // Use splice to mutate the newTypes array\n      // => remove the clicked type\n      newTypes?.splice(pos, 1);\n\n      if (newTypes.length > 0) {\n        // Build new query string\n        let query = '?';\n        let params = 'type=';\n        params += newTypes?.reduce((acc, cur) => acc + `&type=${cur}`);\n        query += params;\n\n        // Push the new query\n        history.push(pathname + query);\n        return;\n      }\n      // If newTypes is empty\n      // (happens after removing the last filter)\n      // reload current path\n      history.push(pathname);\n    }\n  };\n\n  // read url params\n  const queryParams = new URLSearchParams(search);\n  const queries = queryParams.getAll('type');\n\n  useEffect(() => {\n    setTypeQueries(queries);\n  }, [search]);\n\n  return (\n    <>\n      <span className=\"filter-control__btn\">Kategorien:</span>\n      {!queries.length && (\n        <button\n          onClick={removeFilter}\n          type=\"button\"\n          className=\"filter-control__btn filter-control__btn--all\"\n        >\n          Alle\n        </button>\n      )}\n      {queries?.map((query) => {\n        return (\n          <button\n            onClick={removeFilter}\n            type=\"button\"\n            className=\"filter-control__btn\"\n            data-event-type={query}\n            key={query}\n          >\n            {query}\n          </button>\n        );\n      })}\n    </>\n  );\n};\n","// Provide date + time of an event\n// Takes an array of event objects\n// manipulates each of the containing objects\n\nfunction convertDates(eventObjects) {\n  eventObjects.forEach((eventObj) => {\n    const dateDetails = getDateDetails(eventObj.date, eventObj.name);\n    eventObj.dateDetails = dateDetails;\n    // console.log(eventObj.dateDetails);\n  });\n  return eventObjects;\n}\n\nfunction getDateDetails(dateStr, eventName) {\n  // dateObj gets passed as a string, so:\n  // Convert it back into a date object!\n  const date = new Date(dateStr);\n\n  var options = {\n    weekday: 'short',\n    year: 'numeric',\n    month: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    day: 'numeric',\n    timeZone: 'Europe/Berlin',\n    // timeZoneName: \"short\",\n  };\n\n  // Format date\n  const dateArr = new Intl.DateTimeFormat('de-DE', options)\n    .format(date)\n    .split(/(,|\\sum\\s)/);\n\n  const dateInfo = {\n    weekday: dateArr[0],\n    date: dateArr[2],\n    time: dateArr[4].trim(),\n    month: date.getMonth(),\n    day: date.getDate(),\n  };\n\n  return dateInfo;\n}\n\nexport default convertDates;\n","import { useState, useEffect } from 'react';\nimport convertDates from '../helpers/convertDates';\n\nconst useFetch = (url) => {\n  const [data, setData] = useState(null);\n  const [pending, setPending] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setPending(true);\n      const res = await fetch(url);\n      let json = await res.json();\n      json = convertDates(json);\n      // json = filterForTodaysEvents(json);\n      setData(json);\n      setPending(false);\n    };\n    fetchData();\n  }, [url]);\n\n  return { data, pending };\n};\n\nexport default useFetch;\n","export const IconArrow = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      className=\"bi bi-forward-fill\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path d=\"m9.77 12.11 4.012-2.953a.647.647 0 0 0 0-1.114L9.771 5.09a.644.644 0 0 0-.971.557V6.65H2v3.9h6.8v1.003c0 .505.545.808.97.557z\" />\n    </svg>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { IconArrow } from '../assets/icon-arrow';\n\nconst typeLink = (eventType) => {\n  const types = eventType.split(',');\n  let query = '?';\n  let params = 'type=';\n  params += types.reduce((acc, cur) => {\n    return acc + `&type=${cur.trim()}`;\n  });\n\n  query += params;\n  return query;\n};\n\nexport const Event = ({ event, slug }) => {\n  return (\n    <article className=\"event-card\" data-color={event.dateDetails.weekday}>\n      {/* Event meta data */}\n      <div className=\"event-card__upper\">\n        <div className=\"event__place\">{event.place}</div>\n        <div className=\"event__date\">{event.dateDetails.date}</div>\n        <div className=\"event__day\">[ {event.dateDetails.weekday} ]</div>\n        <Link\n          to={`${slug ? slug : ''}${typeLink(event.type)}`}\n          className=\"event__type\"\n        >\n          {event.type}\n        </Link>\n      </div>\n\n      <a href={event.link} target=\"blank\" rel=\"noopener\">\n        <div className=\"event-card__lower\">\n          <div className=\"event__time\">{event.dateDetails.time}</div>\n\n          {/* Event name */}\n          <div className=\"event__name\">{event.name}</div>\n\n          {/* Arrow */}\n          <IconArrow />\n        </div>\n      </a>\n    </article>\n  );\n};\n","import { Link } from \"react-router-dom\";\n\nconst EventsNone = ({ today, setToday, pending }) => {\n  return (\n    <div className=\"eventsNone__container\">\n      <div className=\"eventsNone__svg-container\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"100%\"\n          height=\"100%\"\n          className={`${pending ? \"svgLoading\" : \"\"} bi bi-boombox`}\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M6 12.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5ZM3 8.062C3 6.76 4.235 5.765 5.53 5.886a26.58 26.58 0 0 0 4.94 0C11.765 5.765 13 6.76 13 8.062v1.157a.933.933 0 0 1-.765.935c-.845.147-2.34.346-4.235.346-1.895 0-3.39-.2-4.235-.346A.933.933 0 0 1 3 9.219V8.062Zm4.542-.827a.25.25 0 0 0-.217.068l-.92.9a24.767 24.767 0 0 1-1.871-.183.25.25 0 0 0-.068.495c.55.076 1.232.149 2.02.193a.25.25 0 0 0 .189-.071l.754-.736.847 1.71a.25.25 0 0 0 .404.062l.932-.97a25.286 25.286 0 0 0 1.922-.188.25.25 0 0 0-.068-.495c-.538.074-1.207.145-1.98.189a.25.25 0 0 0-.166.076l-.754.785-.842-1.7a.25.25 0 0 0-.182-.135Z\" />\n          <path d=\"M8.5 1.866a1 1 0 1 0-1 0V3h-2A4.5 4.5 0 0 0 1 7.5V8a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1v1a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2v-1a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1v-.5A4.5 4.5 0 0 0 10.5 3h-2V1.866ZM14 7.5V13a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V7.5A3.5 3.5 0 0 1 5.5 4h5A3.5 3.5 0 0 1 14 7.5Z\" />\n        </svg>\n      </div>\n      {/* Still loading data */}\n      {pending && (\n        <div className=\"eventsNone__copy\">\n          <span className=\"text-bold\">Einen Moment... </span>\n          <p>Ich suche nach Veranstaltungen.</p>\n        </div>\n      )}\n      {/* No events for today */}\n      {today && !pending && (\n        <>\n          <div className=\"eventsNone__copy\">\n            <span className=\"text-bold\">Ooops</span>, leider finde ich keine\n            Events für heute. Guck doch mal, was in den kommenden Tagen los ist:\n          </div>\n          <div>\n            <Link to=\"/all\" className=\"nav__item\">\n              Alle Veranstaltungen\n            </Link>\n          </div>\n        </>\n      )}\n      {/* No events at all */}\n      {!today && !pending && (\n        <div className=\"eventsNone__copy\">\n          <span className=\"text-bold\">\n            Leider finde ich keine Veranstaltungen.\n          </span>{\" \"}\n          Schau später nochmal vorbei.\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EventsNone;\n","import { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { filterTypes } from \"../filters/filterTypes\";\n\n// CUSTOM HOOKS\nimport useFetch from \"../hooks/useFetch\";\n\n// COMPONENTS\nimport { Event } from \"./Event\";\nimport EventsNone from \"./EventsNone\";\n\n// API ENDPOINTS\nconst localEndpoint = \"http://localhost:5033/events.json\";\n// const localEndpoint = 'http://localhost:3000/events';\nconst apiEndpoint = \"https://sleepy-crag-13951.herokuapp.com/bvents.json\";\n\n// TRANSITIONS\n// add a smoother transition when changing filters\nconst viewTransition = () => {\n  const eventList = document.querySelector(\".event-list\");\n  eventList.classList.add(\"viewTrans\");\n  setTimeout(removeTrans, 600);\n};\n\n// remove transition class\nfunction removeTrans() {\n  const eventList = document.querySelector(\".event-list\");\n  eventList.classList.remove(\"viewTrans\");\n}\n\nexport const EventList = ({ filter, routeProps }) => {\n  const url =\n    process.env.NODE_ENV === \"development\" ? localEndpoint : apiEndpoint;\n\n  const [today, setToday] = useState(true);\n  const [events, setEvents] = useState(null);\n  const [fe, setFe] = useState(null); // Filtered events\n  const { data, pending } = useFetch(url);\n\n  const { search } = useLocation();\n\n  useEffect(() => {\n    viewTransition();\n    setEvents(filter(data));\n    filter.name === \"FilterToday\" ? setToday(true) : setToday(false);\n  }, [data, filter]);\n\n  useEffect(() => {\n    viewTransition();\n    const queryParams = new URLSearchParams(search);\n    const query = queryParams.getAll(\"type\");\n    setFe(filterTypes(events, query));\n  }, [events, search]);\n\n  return (\n    <>\n      <div className=\"event-list\">\n        {/* today's events */}\n        {fe &&\n          fe.map((event, index) => (\n            <Event\n              key={index}\n              event={event}\n              index={index}\n              slug={routeProps.location.pathname}\n            />\n          ))}\n        {/* no events */}\n        {!events && (\n          <EventsNone today={today} setToday={setToday} pending={pending} />\n        )}\n      </div>\n    </>\n  );\n};\n","export const filterTypes = (events, query) => {\n  // Return if there are no events\n  if (!events) return;\n  // Return all events if there is no query\n  if (!query || query?.length === 0) return events;\n  try {\n    // const fe = events.filter((event) => event.place === 'Musa');\n    const re = new RegExp(query.join('|'));\n    const fe = events.filter((event) => {\n      return re.test(event.type);\n    });\n    return fe;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  :root {\n    --clr-bg: #001524;\n    --clr-fg: #ffecd1;\n    --clr-accent: #ff7d00;\n    --clr-btn-1: #007745; /* #fa515d */\n    --clr-btn-2: #9b0095;\n    --border-radius: 1px;\n  }\n`;\n\nexport const GlobalStylesLight = createGlobalStyle`\n  :root {\n    --clr-bg: #e9ecf5;\n    --clr-fg: #202c59;\n    --clr-accent: #9b0095;\n    --clr-btn-1: #007745; /* #fa515d */\n    --clr-btn-2: #9b0095;\n    --border-radius: 4px;\n  }\n`;\n","// Define how long after it's starting time an event will still be displayed\nconst timeOffset = 2;\n// Return an object with info on the current time\nconst getCurrentDateInfo = () => {\n  const date = new Date();\n  return {\n    month: date.getMonth(),\n    date: date.getDate(),\n    hours: date.getHours(),\n  };\n};\n\nconst FilterToday = (events) => {\n  const todaysEvents = [];\n  const today = getCurrentDateInfo();\n  if (events) {\n    events.forEach((event) => {\n      const eventDate = new Date(event.date);\n      // console.log(date.getDay());\n      if (\n        eventDate.getMonth() === today.month &&\n        eventDate.getDate() === today.date &&\n        eventDate.getHours() >= today.hours - timeOffset\n      )\n        todaysEvents.push(event);\n    });\n    // Return null, if array is empty\n    if (!todaysEvents.length) return null;\n    return todaysEvents;\n  }\n  return null;\n};\n\nconst FilterTomorrow = (events) => {\n  const todaysEvents = [];\n  const today = getCurrentDateInfo();\n  if (events) {\n    events.forEach((event) => {\n      const eventDate = new Date(event.date);\n      // console.log(date.getDay());\n      if (\n        eventDate.getMonth() === today.month &&\n        eventDate.getDate() === today.date + 1\n      )\n        todaysEvents.push(event);\n    });\n    // Return null, if array is empty\n    if (!todaysEvents.length) return null;\n    return todaysEvents;\n  }\n  return null;\n};\n\nconst FilterAll = (events) => {\n  const allEvents = [];\n  const today = getCurrentDateInfo();\n  if (events) {\n    // Filter events to not show expired events\n    events.forEach((event) => {\n      const eventDate = new Date(event.date);\n\n      if (\n        eventDate.getMonth() === today.month && // Event is this month\n        eventDate.getDate() < today.date // but, date is in the past\n      ) {\n        return;\n      }\n      if (\n        eventDate.getMonth() === today.month && // The month is this month\n        eventDate.getDate() === today.date && // The day is today\n        eventDate.getHours() <= today.hours - timeOffset // but, the event already started (- offset)\n      ) {\n        return;\n      }\n      // The event is today and did n\n      allEvents.push(event);\n    });\n    // Return null, if array is empty\n    if (!allEvents.length) return null;\n    return allEvents;\n  }\n  return null;\n};\n\nexport { FilterToday, FilterTomorrow, FilterAll };\n","import Header from './components/Header';\nimport { Nav } from './components/Nav';\nimport { FilterControls } from './components/FilterControls';\nimport { EventList } from './components/EventList';\n\nimport {\n  //BrowserRouter as Router,\n  HashRouter,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport { useTheme } from './hooks/useTheme';\n\n// Use global styles to change themes\nimport { GlobalStyles, GlobalStylesLight } from './styles/GlobalStyles';\n\n// Date filters\nimport { FilterToday, FilterTomorrow, FilterAll } from './filters/FilterDates';\n\nfunction App() {\n  const { mode } = useTheme();\n  return (\n    <HashRouter>\n      {mode === 'dark' && <GlobalStyles />}\n      {mode === 'light' && <GlobalStylesLight />}\n      <div className=\"App\">\n        <Header />\n        <Nav />\n        <main className=\"main\">\n          <FilterControls />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(routeProps) => (\n                <EventList filter={FilterToday} routeProps={routeProps} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/tomorrow\"\n              render={(routeProps) => (\n                <EventList filter={FilterTomorrow} routeProps={routeProps} />\n              )}\n            ></Route>\n            <Route\n              exact\n              path=\"/all\"\n              render={(routeProps) => (\n                <EventList filter={FilterAll} routeProps={routeProps} />\n              )}\n            />\n          </Switch>\n        </main>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nimport { ThemeProvider } from \"./context/ThemeContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}